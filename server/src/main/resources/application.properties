#############################
# Application configuration #
#############################

# This file contains the default values. 
# You can overwrite each value in the corresponding profile OR deployment descriptor.
#   Ex: LOCAL and TEST use H2 database while the DEV and PR use MySQL.
# Have a look to Spring boot 'Chapter 24 Externalized configuration'
#   http://docs.spring.io/spring-boot/docs/current/reference/html/boot-features-external-config.html
# 


# Generic information
#---------------------------------------------------------------------------------------
info.app.name=@artifactId@
info.app.description=DAXIONGMAO server - central backend of all custom developments
info.app.version=@version@
info.app.profiles=${spring.profiles.active:local,datacenter}


# Spring boot settings
#---------------------------------------------------------------------------------------
spring.profiles.active=local,datacenter

# Spring boot standalone settings
#---------------------------------------------------------------------------------------
server.port = 10000


# Log
#---------------------------------------------------------------------------------------
logging.file=/var/log/daxiongmao/server.log
logging.level.root=INFO


# Acutator settings (information about the current application)
#---------------------------------------------------------------------------------------
# Full endpoints list: http://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#production-ready-endpoints

# Displays application info
endpoints.info.sensitive=false
endpoints.info.enabled=true

####
# Sensitive endpoints
####
# BEANS = Displays a complete list of all the Spring beans in your application
endpoints.beans.sensitive=false
endpoints.beans.enabled=true
# HEALTH = Use it to check the health/status of the running application
endpoints.health.sensitive=false
endpoints.health.enabled=true
# METRICS = Shows metrics information for the current application
endpoints.metric.sensitive=false
endpoints.metric.enabled=true
# TRACE = Displays trace information (by default the last 100 HTTP requests)
endpoints.trace.sensitive=false
endpoints.trace.enabled=true
# AUTOCONFIG = Displays an auto-configuration report showing all auto-configuration candidates and the reason why they were or were not applied
endpoints.autoconfig.sensitive=false
endpoints.autoconfig.enabled=true
# MAPPINGS = Displays a collated list of all @RequestMapping paths
endpoints.mappings.sensitive=false
endpoints.mappings.enabled=true

####
# LOGGERS (Sensitive by default)
####
# Shows and modifies the configuration of loggers in the application
endpoints.loggers.sensitive=false
endpoints.loggers.enabled=true
# Consult the logs online
endpoints.logfile.sensitive=false
endpoints.logfile.enabled=true


# JSP
# --------------------------------------------------------------------------------------
spring.mvc.view.prefix: /WEB-INF/jsp/
spring.mvc.view.suffix: .jsp


# Database settings
#---------------------------------------------------------------------------------------
# Server connection
spring.datasource.url = jdbc:mysql://localhost:3306/car
spring.datasource.username = root
spring.datasource.password = toor
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
# Database driver
spring.datasource.driverClassName=com.mysql.jdbc.Driver

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# Show or not log for each sql query
spring.jpa.show-sql = false

# Hibernate ddl auto (create, create-drop, update)
spring.jpa.hibernate.ddl-auto = update

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Use spring.jpa.properties.* for Hibernate native properties 
# (the prefix is stripped before adding them to the entity manager)
# See https://docs.jboss.org/hibernate/orm/4.3/manual/en-US/html/ch03.html#configuration-optional



