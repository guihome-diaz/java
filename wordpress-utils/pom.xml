<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>eu.daxiongmao.prv</groupId>
    <artifactId>wordpress-utils</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <name>gallery-files</name>
    <description>Daxiongmao.eu # Wordpress's Gallery files # Spring boot + JavaFX + embedded DB</description>

    <developers>
        <developer>
            <name>Guillaume Diaz</name>
            <email>guillaume@qin-diaz.com</email>
        </developer>
    </developers>

    <organization>
        <name>Daxiongmao.eu</name>
        <url>http://daxiongmao.eu/</url>
    </organization>
    
    <scm>
        <connection>https://github.com/guihome-diaz/java.git</connection>
        <developerConnection>https://github.com/guihome-diaz/java.git</developerConnection>
        <url>https://github.com/guihome-diaz/java/tree/master/wordpress-utils</url>
    </scm>

    <!-- SPRING BOOT FRAMEWORK -->
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>1.5.4.RELEASE</version>
    </parent>

    <!-- ############## -->
    <!-- # PROPERTIES # -->
    <!-- ############## -->
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.8</java.version>

        <!-- Dependencies -->
        <springboot-javafx.version>1.3.24</springboot-javafx.version>

        <!-- Program entry point -->
        <exec.mainClass>eu.daxiongmao.wordpress.Main</exec.mainClass>
    </properties>


    <build>
        <!-- Artifact name -->
        <finalName>wordpress-utils</finalName>

        <resources>
            <!-- copy fxml and css resources -->
            <resource>
                <filtering>false</filtering>
                <directory>${basedir}/src/main/java</directory>
                <includes>
                    <include>**/*.fxml</include>
                    <include>**/*.css</include>
                    <include>**/*.properties</include>
                </includes>
            </resource>
            <resource>
                <filtering>false</filtering>
                <directory>${basedir}/src/main/resources</directory>
                <includes>
                    <include>**/*.*</include>
                </includes>
            </resource>
            <resource>
                <filtering>false</filtering>
                <directory>${basedir}/src/main/launcher</directory>
                <includes>
                    <include>**/*.bat</include>
                    <include>**/*.sh</include>
                </includes>
            </resource>
            <resource>
                <directory>${basedir}/src/test/java</directory>
                <includes>
                    <include>**/*.fxml</include>
                    <include>**/*.css</include>
                    <include>**/*.properties</include>
                </includes>
            </resource>
        </resources>

        <plugins>        
            <!-- ##### COMPILATION SETTINGS ##### --> 
            <!-- Include resources -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <configuration>
                    <delimiters>
                        <delimiter>@</delimiter>
                    </delimiters>
                    <useDefaultDelimiters>false</useDefaultDelimiters>
                </configuration>
            </plugin>
            
            <!-- Check if some dependencies are vulnerable (public notice) -->
            <plugin>
                <groupId>org.owasp</groupId>
                <artifactId>dependency-check-maven</artifactId>
                <version>1.3.5.1</version>
            </plugin>
            
            <!-- Java build -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <optimize>true</optimize>
                    <showDeprecation>true</showDeprecation>
                    <showWarnings>true</showWarnings>
                </configuration>
            </plugin>
            
            <!-- Generate and upload the source artifact to simplify debugging -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            
            <!-- Generate and upload the javadoc artifact to ease usage by 3rd party -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <executions>
                    <execution>
                        <id>attach-javadocs</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
			
			
			<!-- Spring boot creation of an UBER JAR: the application will be bundle into 1 single executable JAR -->
			<!-- You'll just have to distribute the jar to all your client for the application to work -->
			<!-- The output JAR will be "${project.finalName}-spring-boot.jar" -->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
						<configuration>
							<classifier>spring-boot</classifier>
							<mainClass>
								${exec.mainClass}
							</mainClass>
						</configuration>
					</execution>
				</executions>
			</plugin>
        
            <!-- ###### QUALITY CHECKS ###### -->
            <!-- FindBugs -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>findbugs-maven-plugin</artifactId>
                <version>3.0.4</version>
            </plugin>
            
            <!-- To use online quality tool "Coveralls" # see https://coveralls.io/ -->
            <plugin>
                <groupId>org.eluder.coveralls</groupId>
                <artifactId>coveralls-maven-plugin</artifactId>
                <version>4.3.0</version>
            </plugin>
            
            <!-- SonarQube plugin -->
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.7.9</version>
                <executions>
                    <execution>
                        <id>prepare-agent</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            
        </plugins>
    </build>


    <dependencies>
        <!-- LOMBOK : be less verbose and more efficient! -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
        </dependency>
    
        <!-- Apache commons NET : to handle common network protocols such as FTP / SFTP -->
        <dependency>
            <groupId>commons-net</groupId>
            <artifactId>commons-net</artifactId>
            <version>3.6</version>
        </dependency>

        <!-- Apache commons (utilities set) -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.5</version>
        </dependency>
        
        <!-- Spring boot # core features -->
        <dependency>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter</artifactId>
        </dependency>
        
        <!-- Spring boot # Database features -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        
        <!-- Embedded database -->
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
        </dependency>
    	
        <!-- Spring boot # JavaFX integration -->
        <!-- (i) 2017-09-01 | I embedded my fork to avoid conflicts with other MVN releases & to simplify the development process -->
        <!-- dependency>
          <groupId>de.roskenet</groupId>
          <artifactId>springboot-javafx-support</artifactId>
          <version>${springboot-javafx.version}</version>
        </dependency -->
                
        <!-- Spring boot # Set of utilities to work locally (hot swap) -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <optional>true</optional>
        </dependency>
        
        <!-- Spring boot # ACTUATOR - to display information about the current application -->
        <!-- Application status and settings will be available at '/actuator' -->
        <!-- http://www.baeldung.com/spring-boot-actuators + http://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#production-ready-endpoints -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>        
        
        <!-- Testing -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

</project>
